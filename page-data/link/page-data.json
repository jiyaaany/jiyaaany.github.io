{"componentChunkName":"component---src-templates-blog-template-js","path":"/link/","result":{"data":{"cur":{"id":"c2bff4e9-1e69-5f70-94af-5214e90034fd","html":"<h1 id=\"링크-모음집\" style=\"position:relative;\"><a href=\"#%EB%A7%81%ED%81%AC-%EB%AA%A8%EC%9D%8C%EC%A7%91\" aria-label=\"링크 모음집 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>링크 모음집</h1>\n<p><a href=\"https://auth0.com/blog/url-uri-urn-differences/\">URL, URI, URN의 차이</a></p>","excerpt":"링크 모음집 URL, URI, URN의 차이","frontmatter":{"date":"May 24, 2022","title":"link 모음집","categories":"TIL","author":"지걸","emoji":"🙈"},"fields":{"slug":"/link/"}},"next":{"id":"945b5477-4a7a-57a6-9a2f-3a1cb0b80af6","html":"<h1 id=\"code-classlanguage-texttransitioncode-vs-code-classlanguage-textanimationcode\" style=\"position:relative;\"><a href=\"#code-classlanguage-texttransitioncode-vs-code-classlanguage-textanimationcode\" aria-label=\"code classlanguage texttransitioncode vs code classlanguage textanimationcode permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">transition</code> VS <code class=\"language-text\">animation</code></h1>\n<p><code class=\"language-text\">transition</code>은 요소의 상태가 변할 때 애니메이션을 실행한다. <code class=\"language-text\">animation</code> 속성은 요소의 모양과 동작을 키프레임 단위로 변경할 수 있다.\n키프레임 동작은 재생 횟수, 방향 등 여러 속성으로 제어할 수 있다.<br>\n가장 큰 차이는 <code class=\"language-text\">transition</code> 은 요소의 상태가 바뀔 때의 상태를 애니메이션으로 표현하지만, <code class=\"language-text\">animation</code> 속성은 요소의 상태 변화와 상관없이\n애니메이션을 실행한다. 또한 <code class=\"language-text\">@keyframse</code> 속성으로 프레임을 추가할 수 있다.</p>\n<p>transition의 예)</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.box</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">transition</span><span class=\"token punctuation\">:</span> width 2s<span class=\"token punctuation\">,</span> height 2s<span class=\"token punctuation\">;</span> <span class=\"token selector\">// 요소의 상태 변화\n    \n    &amp;:hover</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 200px<span class=\"token punctuation\">;</span>\n        <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 200px<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h1 id=\"code-classlanguage-textanimationcode\" style=\"position:relative;\"><a href=\"#code-classlanguage-textanimationcode\" aria-label=\"code classlanguage textanimationcode permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">animation</code></h1>\n<ul>\n<li><code class=\"language-text\">animation-name</code>: <code class=\"language-text\">@keyframes</code> 규칙을 준수 해 정의한 애니메이션 이름</li>\n<li><code class=\"language-text\">animation-duration</code>: 애니메이션이 얼마에 걸쳐 일어날지 결정</li>\n<li><code class=\"language-text\">animation-delay</code>: 로드 이후 어느 정도 텀을 두어 애니메이션이 시작될지 지정</li>\n<li><code class=\"language-text\">animation-direction</code>: 애니메이션의 방향 지정</li>\n<li><code class=\"language-text\">animation-iteration-count</code>: 애니메이션이 몇 번 반복될지 지정 <code class=\"language-text\">infinite</code>로 지정하면 무한반복</li>\n<li><code class=\"language-text\">animation-play-state</code>: 애니메이션을 멈추거나 다시 시작</li>\n<li><code class=\"language-text\">animation-timing-function</code>: 중간 상태들의 전환 간격을 지정</li>\n<li><code class=\"language-text\">animation-fill-mode</code>: 시작되기 전이나 끝나고 난 후 어떤 값이 적용될지 지정</li>\n</ul>\n<h1 id=\"animation의-성능-문제\" style=\"position:relative;\"><a href=\"#animation%EC%9D%98-%EC%84%B1%EB%8A%A5-%EB%AC%B8%EC%A0%9C\" aria-label=\"animation의 성능 문제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>animation의 성능 문제</h1>\n<ul>\n<li><code class=\"language-text\">margin</code>, <code class=\"language-text\">height</code> 속성은 애니메이션에 사용했을 때 성능 저하를 유발한다.</li>\n<li>윌보이드 - <a href=\"https://www.youtube.com/watch?v=bEoLCZzWZX8\">부드러운 애니메이션 만드는 방법</a>\n<ul>\n<li>부드러운 애니메이션을 적용하려면 <code class=\"language-text\">reflow</code>와 <code class=\"language-text\">repaint</code>를 최소화 시켜야 한다.</li>\n</ul>\n</li>\n<li><a href=\"https://docs.google.com/spreadsheets/u/0/d/1Hvi0nu2wG3oQ51XRHtMv-A_ZlidnwUYwgQsPQUg1R2s/pub?single=true&#x26;gid=0&#x26;output=html\">reflow / repaint가 발생하는 속성</a></li>\n</ul>\n<h2 id=\"reflow를-최소화하는-방법\" style=\"position:relative;\"><a href=\"#reflow%EB%A5%BC-%EC%B5%9C%EC%86%8C%ED%99%94%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95\" aria-label=\"reflow를 최소화하는 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>reflow를 최소화하는 방법</h2>\n<ol>\n<li>클래스 변화에 따른 스타일의 변화를 원할 경우, 최대한 DOM 구조 안쪽에 위치한 노드에 추가합니다.</li>\n<li>애니메이션이 들어간 요소는 가급적 <code class=\"language-text\">position: fixed</code> 또는 <code class=\"language-text\">position: absolute</code>로 지정합니다.\n<ul>\n<li>다른 요소에는 영향을 끼치지 않으므로 해당 요소만 reflow가 발생합니다.</li>\n</ul>\n</li>\n<li>JS를 통해 스타일 변화를 줄 경우, 가급적 한번에 처리합니다.</li>\n<li>인라인 스타일을 최대한 배제합니다.</li>\n<li>테이블 레이아웃을 피하는 것이 좋습니다.</li>\n</ol>\n<ul>\n<li>테이블 레이아웃은 넓이를 계산하면서 렌더링이 느려집니다. 꼭 필요한 경우를 제외하곤 테이블 레이아웃을 사용하지 않는 것이 좋습니다. 만약 사용한다면 CSS 속성</li>\n</ul>\n<p><code class=\"language-text\">table-layout: fixed</code>를 사용하면 조금 더 빠르게 렌더링 할 수 있습니다.\n6. CSS 하위선택자는 필요한 만큼 정리하는 것이 좋습니다.</p>\n<p>변경을 미리 감지하여 알려주는 <a href=\"https://wit.nts-corp.com/2017/06/05/4571\">will-change</a> 방법도 있는데 이건 나중에 봐야지 ..<br>\n애니메이션 키프레임의 경우 CPU를 많이 사용하여 자칫 부하를 가져다줄 수 있는데 다른 방법으로 GPU를 사용하도록 유도할 수 있다. <a href=\"http://daplus.net/css-css-%ED%82%A4-%ED%94%84%EB%A0%88%EC%9E%84-%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98-cpu-%EC%82%AC%EC%9A%A9%EB%9F%89%EC%9D%B4-%EB%86%92%EC%8A%B5%EB%8B%88%EB%8B%A4-%EC%9D%B4%EB%A0%87%EA%B2%8C/\">링크</a></p>\n<h1 id=\"ref\" style=\"position:relative;\"><a href=\"#ref\" aria-label=\"ref permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Ref</h1>\n<p><a href=\"https://developer.mozilla.org/ko/docs/Web/CSS/CSS_Transitions/Using_CSS_transitions\">https://developer.mozilla.org/ko/docs/Web/CSS/CSS_Transitions/Using_CSS_transitions</a>\n<a href=\"https://webclub.tistory.com/621\">https://webclub.tistory.com/621</a>\n<a href=\"https://wit.nts-corp.com/2017/06/05/4571\">https://wit.nts-corp.com/2017/06/05/4571</a>\n<a href=\"http://daplus.net/css-css-%ED%82%A4-%ED%94%84%EB%A0%88%EC%9E%84-%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98-cpu-%EC%82%AC%EC%9A%A9%EB%9F%89%EC%9D%B4-%EB%86%92%EC%8A%B5%EB%8B%88%EB%8B%A4-%EC%9D%B4%EB%A0%87%EA%B2%8C/\">http://daplus.net/css-css-%ED%82%A4-%ED%94%84%EB%A0%88%EC%9E%84-%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98-cpu-%EC%82%AC%EC%9A%A9%EB%9F%89%EC%9D%B4-%EB%86%92%EC%8A%B5%EB%8B%88%EB%8B%A4-%EC%9D%B4%EB%A0%87%EA%B2%8C/</a></p>","frontmatter":{"date":"May 04, 2022","title":"CSS 애니메이션","categories":"TIL","author":"지걸","emoji":"🙈"},"fields":{"slug":"/animation/"}},"prev":{"id":"9ec96699-e42b-551c-af16-bcb8abd9b0e6","html":"<h1 id=\"useeffect-훅-안에서-async-를-사용하는-방법\" style=\"position:relative;\"><a href=\"#useeffect-%ED%9B%85-%EC%95%88%EC%97%90%EC%84%9C-async-%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95\" aria-label=\"useeffect 훅 안에서 async 를 사용하는 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>useEffect 훅 안에서 async 를 사용하는 방법</h1>\n<p><code class=\"language-text\">useEffect</code> 훅 안에서 <code class=\"language-text\">async</code> 를 사용하는 방법은 두가지가 있습니다.\n첫 번째는 익명함수를 사용하는 방법이고 두 번째는 Promise 를 해결하여 async 를 쓰지 않아도 되게끔 처리하는 것입니다.</p>\n<h2 id=\"1-익명함수를-사용하기\" style=\"position:relative;\"><a href=\"#1-%EC%9D%B5%EB%AA%85%ED%95%A8%EC%88%98%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\"1 익명함수를 사용하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 익명함수를 사용하기</h2>\n<p>아래와 같이 async 로 감싼 익명함수를 생성해 await 구문을 사용할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">await</span> axios<span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token string\">'blabla.com'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"2-promise-해결\" style=\"position:relative;\"><a href=\"#2-promise-%ED%95%B4%EA%B2%B0\" aria-label=\"2 promise 해결 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Promise 해결</h2>\n<p>이 방법은 더 일반적인 방법으로 Promise then() 구문을 사용하여 해결할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  axios<span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token string\">'blabla.com'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span> <span class=\"token operator\">=></span> response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","frontmatter":{"date":"August 09, 2022","title":"useEffect 훅에서 async 를 사용하는 방법","categories":"react","author":"지걸","emoji":"🧐"},"fields":{"slug":"/how-to-use-async-in-use-effect/"}},"site":{"siteMetadata":{"siteUrl":"https://jiyaaany.netlify.app","comments":{"utterances":{"repo":"jiyaaany/jiyaaany.github.io"}}}}},"pageContext":{"slug":"/link/","nextSlug":"/animation/","prevSlug":"/how-to-use-async-in-use-effect/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}