{"componentChunkName":"component---src-templates-blog-template-js","path":"/open-source/","result":{"data":{"cur":{"id":"f86cb3d2-3672-5d8b-ba57-a04e6c0d168d","html":"<h1 id=\"시작하기-전에-알아야-할-파일들\" style=\"position:relative;\"><a href=\"#%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0-%EC%A0%84%EC%97%90-%EC%95%8C%EC%95%84%EC%95%BC-%ED%95%A0-%ED%8C%8C%EC%9D%BC%EB%93%A4\" aria-label=\"시작하기 전에 알아야 할 파일들 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>시작하기 전에 알아야 할 파일들</h1>\n<ul>\n<li><strong>LICENSE</strong>: 프로젝트에 적용된 라이센스를 보여주는 파일</li>\n<li><strong>CONTRIBUTING</strong>: 프로젝트에 기여하는 규칙이 적힌 문서</li>\n<li><strong>CODE OF CONDUCT</strong>: 행동규범</li>\n<li><strong>스타일 가이드</strong>: CONTRIBUTING 안에 속해있는 경우도 있다.</li>\n<li>그 외</li>\n</ul>\n<h1 id=\"기여할-프로젝트-찾기\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%EC%97%AC%ED%95%A0-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%B0%BE%EA%B8%B0\" aria-label=\"기여할 프로젝트 찾기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기여할 프로젝트 찾기</h1>\n<p><strong>구체적인 목표 찾기</strong>: 오픈소스 기여를 통해 어떤 것을 얻을 수 있을지</p>\n<ul>\n<li>기술: 어떤 기술을 사용한 프로젝트에 기여할 수 있는지</li>\n<li>관심: 꾸준한 기여를 위해 어떤 것에 관심이 있는지</li>\n<li>시간 여유: 어느 정도의 시간을 투자할 수 있는지</li>\n</ul>","excerpt":"시작하기 전에 알아야 할 파일들 LICENSE: 프로젝트에 적용된 라이센스를 보여주는 파일 CONTRIBUTING: 프로젝트에 기여하는 규칙이 적힌 문서 CODE OF CONDUCT: 행동규범 스타일 가이드: CONTRIBUTING 안에 속해있는 경우도 있다. 그 외 기여할 프로젝트 찾기 구체적인 목표 찾기: 오픈소스 기여를 통해 어떤 것을 얻을 수 있을지 기술: 어떤 기술을 사용한 프로젝트에 기여할 수 있는지 관심: 꾸준한 기여를 위해 어떤 것에 관심이 있는지 시간 여유: 어느 정도의 시간을 투자할 수 있는지","frontmatter":{"date":"December 29, 2021","title":"오픈소스 기여","categories":"ToDo","author":"지걸","emoji":"💻"},"fields":{"slug":"/open-source/"}},"next":{"id":"ae882773-5d40-554f-ac91-c1d5fe1e961b","html":"<h1 id=\"2022년에-시도해볼-것들\" style=\"position:relative;\"><a href=\"#2022%EB%85%84%EC%97%90-%EC%8B%9C%EB%8F%84%ED%95%B4%EB%B3%BC-%EA%B2%83%EB%93%A4\" aria-label=\"2022년에 시도해볼 것들 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2022년에 시도해볼 것들</h1>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" checked disabled> Jest를 사용한 테스트 주도 개발</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> 오픈 소스 기여해보기</li>\n</ul>","frontmatter":{"date":"December 29, 2021","title":"2022년에 해보기","categories":"ToDo","author":"지걸","emoji":"💻"},"fields":{"slug":"/bucket-list/"}},"prev":{"id":"e7354b8b-ec67-5dfb-8c99-dc87c49c2d43","html":"<h1 id=\"시작하며\" style=\"position:relative;\"><a href=\"#%EC%8B%9C%EC%9E%91%ED%95%98%EB%A9%B0\" aria-label=\"시작하며 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>시작하며</h1>\n<p>React를 주언어로 사용하고자 하는데 이야기를 나누다보니 Memoization의 개념에 대해 잘 모르고 있는 것 같아 정리해봅니다.</p>\n<h1 id=\"memoization\" style=\"position:relative;\"><a href=\"#memoization\" aria-label=\"memoization permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Memoization</h1>\n<ul>\n<li>이전 연산의 결과값을 <strong>저장</strong>해두고 동일한 입력이 들어오면 재활용하는 방법</li>\n<li>Memoized 된 내용을 재사용할 시, 가상 DOM에서 바뀐 부분을 확인하지 않아 성능이 향상됨.</li>\n</ul>\n<h2 id=\"1-redux\" style=\"position:relative;\"><a href=\"#1-redux\" aria-label=\"1 redux permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Redux</h2>\n<p>Recoil이 아무리 편하긴 해도 .. Redux 공부도 꾸준히 해야겠다 ^^.</p>\n<h2 id=\"2-reactmemo\" style=\"position:relative;\"><a href=\"#2-reactmemo\" aria-label=\"2 reactmemo permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. React.memo</h2>\n<p>컴포넌트를 <code class=\"language-text\">React.memo()</code>로 래핑 시, 렌더링 결과를 Memoizing하고 다음 렌더링에서 Props가 일치한다면 Memoizing된 내용을 재사용합니다.</p>\n<h2 id=\"3-usememo\" style=\"position:relative;\"><a href=\"#3-usememo\" aria-label=\"3 usememo permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. useMemo</h2>\n<p><code class=\"language-text\">React.memo</code>와 흡사한데 <code class=\"language-text\">useMemo</code>는 함수의 결과 값을 Memoizing하여 불필요한 연산을 줄입니다.<br>\n(함수를 <code class=\"language-text\">useMemo</code>로 래핑)</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token function\">computeExpensiveValue</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> 비싼 값 계산<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> memoizedValue <span class=\"token operator\">=</span> <span class=\"token function\">useMemo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">computedExpensiveValue</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"language-text\">useMemo</code>의 [dependency]가 변경되었을 때만 다시 계산함.</p>\n<h2 id=\"4-usecallback\" style=\"position:relative;\"><a href=\"#4-usecallback\" aria-label=\"4 usecallback permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. useCallback</h2>\n<p><code class=\"language-text\">useMemo</code>는 특정 결과 값을 재사용하는 반면, <code class=\"language-text\">useCallback</code>은 특정 함수를 새로 만들지 않고 재사용하고 싶을 때 사용합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> onToggle <span class=\"token operator\">=</span> <span class=\"token function\">useCallback</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">id</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setUsers</span><span class=\"token punctuation\">(</span>\n      users<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">user</span> <span class=\"token operator\">=></span>\n        user<span class=\"token punctuation\">.</span>id <span class=\"token operator\">===</span> id <span class=\"token operator\">?</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span>user<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">active</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span>user<span class=\"token punctuation\">.</span>active <span class=\"token punctuation\">}</span> <span class=\"token operator\">:</span> user\n      <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>users<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  \n  <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>CreateUser onToggle<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>onToggle<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<blockquote>\n<p>메모제이션용 메모리가 추가로 필요하므로, 불필요한 Props 비교를 줄이기 위해서 <code class=\"language-text\">useCallback</code>, <code class=\"language-text\">useMemo</code>, <code class=\"language-text\">React.memo</code>는 컴포넌트의 성능을 실제로 개선할 수 있는 상황에서만 사용</p>\n</blockquote>","frontmatter":{"date":"December 29, 2021","title":"Memoization","categories":"TIL","author":"지걸","emoji":"📚"},"fields":{"slug":"/memoization/"}},"site":{"siteMetadata":{"siteUrl":"https://jiyaaany.netlify.app","comments":{"utterances":{"repo":"jiyaaany/jiyaaany.github.io"}}}}},"pageContext":{"slug":"/open-source/","nextSlug":"/bucket-list/","prevSlug":"/memoization/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}